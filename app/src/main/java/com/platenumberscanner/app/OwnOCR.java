package com.platenumberscanner.app;

import java.util.ArrayList;
import java.util.Collections;

/**
 * Created by luthfi on 23/09/15.
 */
public class OwnOCR {
    private ArrayList<String> model;
    private String alphanumeric[] = {"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9"};

    private String charA = "55333333332111211123333333333334555455543333333311011110111011101110111101110111011110111011101111011101777777777555655556555655556555655556555655556555655556555655556";
    private String charB = "555555555334555555555555555555555555555555555555677555555555333333333333333333333333333332222122111111111111111111101012211111111111111111010007070777777777777777777777777777";
    private String charC = "5555555555555555555555555555555554554545444343343333333333333332323222212111177077077556667777777777707011111111111111111111111111111111122233333333333445453233233320110100170070777777777777777776767666656556";
    private String charD = "555555555333455555555555555555555555555555555555567775555555553333333333333333333333333333223222121211111111111111111111111111111111111110111001070077777777777777777777777777777";
    private String charE = "5555555555555555555555555555555555555555555555555555555553333333333333333333333233333333333311111111777777777777777777777777011111111111123333333333333333311111111177777777777777777011111111111112333333333333333333333333111111111177777777777777777777777777777777777";
    private String charF = "555555555555555555555555555555554555555555555555555555553333333331111111111111111111111123333333333333333311111111177777777777777777011111111111123333333333333333333333333111111111777777777777777777777777777777777777";
    private String charG = "55555555555555555555555555555555555555455454444334333333333333333332232312212121111111111111111777777777777777555555555333333455565667777777777777001111111111111111111111111111111111223333333333333445543233233210110100007077777777777777777776767665656";
    private String charH = "555555555555555555555555555555555555555555555555555555553333333331111111111111111111111233333333333333455555555555555555555553333333333111111111111111111111111111111111111111111111111111111117777777777555555555555555555555567777777777777701111111111111111111111777777777";
    private String charI = "555555555555555555555555555555555545555555555555555555553333333311111111111111111111111111111111111111111111111111111111777777777";
    private String charJ = "5554544443443333333333333333323223221211211111111111111111111111111111111111111111111117777777775555555555555555555555555555555555555555555556677777777777770101176776776";
    private String charK = "5555555555555555555555555555555555555555555555555555555533333333311111111111111111222122345454544545454454554555333333331201111010101010010100101001010212222122222122211211111177777777556556665666656665666656011111111111111111111111777777777";
    private String charL = "5555555555555555555555555555555555555555555555555555555533333333333333333333333333333333333111111111777777777777777777777777701111111111111111111111111111111111111111111111777777777";
    private String charM = "55555555555555555555555555555555554555555555555555555555333333331111111111111111111111112345554555455533333333111121112112345555555555555555555555553333333331111111111111111111111111111111111111111111111111111111117777777775565565556556555655565565567011011011101101101110110117777777777";
    private String charN = "5555555555555555555555555555555555555555555555555555555533333333311111111111111111111111111111111245454545454545545454545454545454533333333311111111111111111111111111111111111111111111111111111111177777777755555555555555555555555555555555601010101010101010101010101010101777777777";
    private String charO = "55555555555555555555555555555555555544545444344333333333333333333232322121212111111111111111111111111111111111111100101007077077777777777777776776675665656";
    private String charP = "5555555555555555555555555555555555555555555555555555555533333333311111111111111111111111233333333333333333232322121221111111111111100101000707777777777777777777777777777";
    private String charQ = "55555555555555555555555555555555555544554444434333333333333334433333333333010002221221111111111111111111111111111111111111010101000707777777777777076777767666665566";
    private String charR = "555555555555555555555555555555555555445454443443333333333333333323232212121211111111111111111111111111111111111110010100707707777777777777776776675665656";
    private String charS = "55555555555555555555555555555555555555555555555555555555333333333111111111111111111111111233445454545454545454545454533333333310101011010101010101010123332323212212111111111111111010000707077777077677777777777777777";
    private String charT = "555555555555555555555555555555555545555555555555555555553333333311111111111111111111111111111111111111111111111111111111777777777";
    private String charU = "55343334333112233333333333334455555555555666676666666666766666666556555655555333333333333333333333333333333333331111111117777777777777777777770222222232222222222221212111111111111110110000070777777777777777777767676656556";
    private String charV = "5545555555445444343434334343343434454555565667777777777770011177677767555545444433443333333333333333223222212111111111111110101007070707707077070770001111111223333333333334445533323332111110100007707777777777777777776766665655556";
    private String charW = "555433433341212233333333333334455555555556677777777555555555333333344455555555556677777777777770011177677677655455444343443333333333333333232323221211211111111111110100102212112111111111110110100707077777777777777777776776666556";
    private String charX = "555555555333333333333455555555555555555555555555555555555555555555553333333331111111111111111111111111111111111111111111111233333333333311111111177777777777777777777777777777777777";
    private String charY = "55555555555333333333333333334555555555555533333333331111111111111233333311111111177777701111111111111111111111111111111177777777776565656656565665656565665656566";
    private String charZ = "555555555555555555555555555555555555555555554545454444343433333333333333322332221212111111111111111111111111111111111111111111111117777777777555555555555555555555555555555555555555555555567777777777700011111111111111111111111011111111111111111111777777777";
    private String charA0 = "5553343343332233333333333334455555555555566777777777777700176767767754544443443333333333333333323232322121121111111111111110110000070777077777777777011211111212333333333333333333333111111111777777777777777777777777777776555556555565555655555655556";
    private String charA1 = "4555455545554555455545554555455545554555455545554555455533333333312111211112111211112111121112111121111211121111211112111777777777555565556555565556555565556555566011101110111011011101110111011101777777777";
    private String charA2 = "555555555555555555555555555555555555554454544434333333333333333332323222212211111111111111100110007077077777777777777701111111111222333333333334345553332333231010110100070777777777777777777767675665566";
    private String charA3 = "555455555555555555545555555555555554555555555555555545553333333321121112111211122445554554554555453333333311121111111111111111111211111111111111111112111111111111777777777555555555555555555555556701111011111111077777775555555565555567011111111111011111111111777777777";
    private String charA4 = "55555555533333333333333333333333334656556556565565655655656556565565565655656556533333333331121211211212112121121121211211212112121121121111111111177777777777777777777777777777777777";
    private String charA5 = "5555554545454545454545454545656565656565656565655655555533333333111212121212121212245454454544545454553333333311111101010010101010010101011122121212121212121212111111777777775565565656566565656001010101010101011177777777";
    private String charA6 = "5555555555555544454566665555555555555545454444343433333333333333332232321212211111111111111100001212221111111111111100101070707777777777777777776776666566";
    private String charA7 = "555555455454545545454545454554545455555555555555455555553333333311111111111111111111112121121212121121212121121211111121777777777555565565656556565655670101010110101011011111777777777";
    private String charA8 = "555555555555555445445344334333333333333334555555555555667777777777770011116776776775544554444344333333333333333323223122121211111111111111111111111111111111111110011000070777777777777777777676666566";
    private String charA9 = "555555555333333333333333333333334656656656656656566566566566566566566555555555533333333333333333333333333333333333111111111777777777777777777777770212212212212212122122122122122122121211111111177777777777777777777777777777777777";

    public OwnOCR() {
        model = new ArrayList<String>();
    }

    public void createmodel() {
        /*create model*/
        model.add(charA);
        model.add(charB);
        model.add(charC);
        model.add(charD);
        model.add(charE);
        model.add(charF);
        model.add(charG);
        model.add(charH);
        model.add(charI);
        model.add(charJ);
        model.add(charK);
        model.add(charL);
        model.add(charM);
        model.add(charN);
        model.add(charO);
        model.add(charP);
        model.add(charQ);
        model.add(charR);
        model.add(charS);
        model.add(charT);
        model.add(charU);
        model.add(charV);
        model.add(charW);
        model.add(charX);
        model.add(charY);
        model.add(charZ);
        model.add(charA0);
        model.add(charA1);
        model.add(charA2);
        model.add(charA3);
        model.add(charA4);
        model.add(charA5);
        model.add(charA6);
        model.add(charA7);
        model.add(charA8);
        model.add(charA9);
    }

    private int LevenshteinDistance(String s,String t) {
        // degenerate cases
        if (s == t) return 0;
        if (s.length() == 0) return t.length();
        if (t.length() == 0) return s.length();

        // create two work vectors of integer distances
        int[] v0 = new int[t.length() + 1];
        int[] v1 = new int[t.length() + 1];

        // initialize v0 (the previous row of distances)
        // this row is A[0][i]: edit distance for an empty s
        // the distance is just the number of characters to delete from t
        for (int i = 0; i < v0.length; i++)
            v0[i] = i;

        for (int i = 0; i < s.length(); i++)
        {
            // calculate v1 (current row distances) from the previous row v0

            // first element of v1 is A[i+1][0]
            //   edit distance is delete (i+1) chars from s to match empty t
            v1[0] = i + 1;

            // use formula to fill in the rest of the row
            for (int j = 0; j < t.length(); j++)
            {
                int cost = (s.charAt(i) == t.charAt(j)) ? 0 : 1;
                v1[j + 1] = Math.min(v1[j] + 1, Math.min(v0[j + 1] + 1, v0[j] + cost));
            }

            // copy v1 (current row) to v0 (previous row) for next iteration
            for (int j = 0; j < v0.length; j++)
                v0[j] = v1[j];
        }

        return v1[t.length()];
    }

    public String AnalyzeCode(String pattern){
        ArrayList<Integer> errors = new ArrayList<Integer>();
        for(String m : model){
            int a = LevenshteinDistance(m,pattern);
            m = rotateModel(m,2);
            int b = LevenshteinDistance(m,pattern);
            m = rotateModel(m,4);
            int c = LevenshteinDistance(m,pattern);
            m = rotateModel(m,6);
            int d = LevenshteinDistance(m,pattern);
            errors.add(Math.min(Math.min(a,b),Math.min(c,d)));
        }
        int min = Collections.min(errors);
        return alphanumeric[errors.indexOf(min)];
    }

    private String rotateModel(String m,int r)
    {
        String result = "";
        for (int i=0;i<m.length();i++) {
            String s = ""+m.charAt(i);
            int n = Integer.parseInt(s);
            n = (n + r) % 8;

            result += n;
        }
        return result;
    }
}
